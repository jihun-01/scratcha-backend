"""Add timezone support to datetime columns

Revision ID: d7e9d1811c97
Revises: aed32cffa7d8
Create Date: 2025-08-28 00:51:01.675609

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'd7e9d1811c97'
down_revision: Union[str, Sequence[str], None] = 'aed32cffa7d8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('api_key', 'created_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=None)
    op.alter_column('api_key', 'updated_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.alter_column('api_key', 'expires_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=True)
    op.alter_column('api_key', 'deleted_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=True)

    op.alter_column('application', 'created_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=None)
    op.alter_column('application', 'updated_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.alter_column('application', 'deleted_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=True)

    op.alter_column('captcha_log', 'created_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=None)

    op.alter_column('captcha_problem', 'created_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=None)
    op.alter_column('captcha_problem', 'expires_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False)

    op.alter_column('captcha_session', 'created_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=None)

    op.alter_column('usage_stats', 'created_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=None)

    op.alter_column('user', 'created_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=None)
    op.alter_column('user', 'updated_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.alter_column('user', 'deleted_at', 
                    existing_type=mysql.DATETIME(), 
                    type_=sa.DateTime(timezone=True), 
                    existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user', 'deleted_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=True)
    op.alter_column('user', 'updated_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.alter_column('user', 'created_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP'))

    op.alter_column('usage_stats', 'created_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP'))

    op.alter_column('captcha_session', 'created_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP'))

    op.alter_column('captcha_problem', 'expires_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False)
    op.alter_column('captcha_problem', 'created_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP'))

    op.alter_column('captcha_log', 'created_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP'))

    op.alter_column('application', 'deleted_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=True)
    op.alter_column('application', 'updated_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.alter_column('application', 'created_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP'))

    op.alter_column('api_key', 'deleted_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=True)
    op.alter_column('api_key', 'expires_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=True)
    op.alter_column('api_key', 'updated_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'))
    op.alter_column('api_key', 'created_at', 
                    existing_type=sa.DateTime(timezone=True), 
                    type_=mysql.DATETIME(), 
                    existing_nullable=False, 
                    server_default=sa.text('CURRENT_TIMESTAMP'))
    # ### end Alembic commands ###
