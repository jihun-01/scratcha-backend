"""init database

Revision ID: cfb570fd4fd2
Revises: 
Create Date: 2025-08-18 02:13:23.483321

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cfb570fd4fd2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('captcha_problem',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='캡챠 문제 ID'),
    sa.Column('image_url', sa.TEXT(), nullable=False, comment='S3 이미지 URL'),
    sa.Column('answer', sa.String(length=20), nullable=False, comment='정답'),
    sa.Column('wrong_answer_1', sa.String(length=20), nullable=False, comment='오답1'),
    sa.Column('wrong_answer_2', sa.String(length=20), nullable=False, comment='오답2'),
    sa.Column('wrong_answer_3', sa.String(length=20), nullable=False, comment='오답3'),
    sa.Column('prompt', sa.String(length=255), nullable=False, comment='문제 설명'),
    sa.Column('difficulty', sa.Integer(), nullable=False, comment='문제 난이도'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='문제 생성 시각'),
    sa.Column('expires_at', sa.DateTime(), nullable=False, comment='문제 교체 시각 (만료일)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='유저 ID'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='로그인 이메일'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='비밀번호 해시'),
    sa.Column('user_name', sa.String(length=100), nullable=True, comment='사용자 이름'),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='userrole'), nullable=False, comment='사용자 권한'),
    sa.Column('subscription_plan', sa.Enum('FREE', 'STARTER', 'PRO', 'ENTERPRISE', name='usersubscription'), nullable=False, comment='구독한 플랜'),
    sa.Column('api_token', sa.Integer(), nullable=False, comment='API 호출 토큰 개수'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='생성 시각'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='수정 시각'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='삭제 시각 (soft-delete)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('application',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='앱 ID'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='사용자 FK'),
    sa.Column('app_name', sa.String(length=100), nullable=False, comment='앱 이름'),
    sa.Column('description', sa.Text(), nullable=True, comment='앱 설명'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='생성 시각'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='수정 시각'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='삭제 시각 (soft-delete)'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('api_key',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='키 ID'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='키 소유자'),
    sa.Column('application_id', sa.Integer(), nullable=False, comment='애플리케이션과 1:1'),
    sa.Column('key', sa.String(length=255), nullable=False, comment='외부 노출용 API 키 문자열'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='키 활성 상태'),
    sa.Column('expires_at', sa.DateTime(), nullable=True, comment='만료 시각 : 0 >= 무제한, 1=1일, 7=7일, 30=30일 등'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='생성 시각'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='수정 시각'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='삭제 시각 (soft-delete)'),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('captcha_session',
    sa.Column('id', sa.Integer(), nullable=False, comment='캡챠 세션 ID'),
    sa.Column('api_key_id', sa.Integer(), nullable=False, comment='사용된 API 키'),
    sa.Column('captcha_problem_id', sa.Integer(), nullable=False, comment='랜덤으로 가져온 문제 ID'),
    sa.Column('client_token', sa.String(length=100), nullable=False, comment='클라이언트에 전달할 고유 토큰 (1회용)'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='생성 시각'),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_key.id'], ),
    sa.ForeignKeyConstraint(['captcha_problem_id'], ['captcha_problem.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_token')
    )
    op.create_table('usage_stats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='사용량 통계 ID'),
    sa.Column('api_key_id', sa.Integer(), nullable=False, comment='통계의 기준이되는 API 키'),
    sa.Column('date', sa.Date(), nullable=False, comment='통계 기준 날짜 (예: 2025-07-01)'),
    sa.Column('captcha_total_requests', sa.Integer(), nullable=False, comment='전체 요청 수'),
    sa.Column('captcha_success_count', sa.Integer(), nullable=False, comment='성공 응답 수'),
    sa.Column('captcha_fail_count', sa.Integer(), nullable=False, comment='성공 응답 수'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='레코드 생성 시각 (기본값으로 현재 시각 사용)'),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_key.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('captcha_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='캡챠 로그 ID'),
    sa.Column('api_key_id', sa.Integer(), nullable=False, comment='사용된 API 키'),
    sa.Column('session_id', sa.Integer(), nullable=False, comment='연결된 캡챠 세션 ID'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='요청자 IP'),
    sa.Column('user_agent', sa.TEXT(), nullable=True, comment='요청자 브라우저 정보'),
    sa.Column('result', sa.Enum('SUCCESS', 'FAIL', 'TIMEOUT', name='captcharesult'), nullable=False, comment='성공 / 실패 / 타임아웃'),
    sa.Column('latency_ms', sa.Integer(), nullable=False, comment='캡챠 문제가 해결되기까지 걸린 시간(밀리초)'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='문제 생성 시간'),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_key.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['captcha_session.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('captcha_log')
    op.drop_table('usage_stats')
    op.drop_table('captcha_session')
    op.drop_table('api_key')
    op.drop_table('application')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('captcha_problem')
    # ### end Alembic commands ###
