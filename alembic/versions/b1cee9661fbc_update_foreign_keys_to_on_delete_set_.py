"""update foreign keys to on delete set null and make columns nullable

Revision ID: b1cee9661fbc
Revises: 75c5931997de
Create Date: 2025-09-08 16:20:31.650396

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'b1cee9661fbc'
down_revision: Union[str, Sequence[str], None] = '75c5931997de'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('payments', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'payments', 'user', ['user_id'], ['id'], ondelete='SET NULL')
    op.alter_column('usage_stats', 'api_key_id',
               existing_type=mysql.INTEGER(),
               nullable=True,
               existing_comment='통계의 기준이되는 API 키')
    op.drop_constraint('usage_stats_ibfk_1', 'usage_stats', type_='foreignkey')
    op.create_foreign_key(None, 'usage_stats', 'api_key', ['api_key_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'usage_stats', type_='foreignkey')
    op.create_foreign_key('usage_stats_ibfk_1', 'usage_stats', 'api_key', ['api_key_id'], ['id'], ondelete='CASCADE')
    op.alter_column('usage_stats', 'api_key_id',
               existing_type=mysql.INTEGER(),
               nullable=False,
               existing_comment='통계의 기준이되는 API 키')
    op.drop_constraint(None, 'payments', type_='foreignkey')
    op.alter_column('payments', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
